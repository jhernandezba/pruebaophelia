// <auto-generated />
using System;
using BackendFact.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApiFact.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210216025644_FacturaMdb")]
    partial class FacturaMdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BackendFact.Entities.Cliente", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("BackendFact.Entities.DetalleFactura", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("FacturaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id_factura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id_producto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<string>("ProductoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Valor_Total")
                        .HasColumnType("float");

                    b.Property<double>("Valor_unitario")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FacturaId");

                    b.HasIndex("ProductoId");

                    b.ToTable("DetalleFacturas");
                });

            modelBuilder.Entity("BackendFact.Entities.Factura", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClienteId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Id_Cliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<double>("Subtotal")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("BackendFact.Entities.Producto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Stock")
                        .HasColumnType("float");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("BackendFact.Entities.DetalleFactura", b =>
                {
                    b.HasOne("BackendFact.Entities.Factura", "Factura")
                        .WithMany("DetalleFacturas")
                        .HasForeignKey("FacturaId");

                    b.HasOne("BackendFact.Entities.Producto", "Producto")
                        .WithMany("DetalleFacturas")
                        .HasForeignKey("ProductoId");

                    b.Navigation("Factura");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("BackendFact.Entities.Factura", b =>
                {
                    b.HasOne("BackendFact.Entities.Cliente", "Cliente")
                        .WithMany("Facturas")
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("BackendFact.Entities.Cliente", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("BackendFact.Entities.Factura", b =>
                {
                    b.Navigation("DetalleFacturas");
                });

            modelBuilder.Entity("BackendFact.Entities.Producto", b =>
                {
                    b.Navigation("DetalleFacturas");
                });
#pragma warning restore 612, 618
        }
    }
}
